/**
 * Course: CPE 593-B
 * @Title homework3.java
 * @author Tianhao Zhu
 * @Description MillerRabin
 * Date: 9/18/2019
 * How to run the code:
 *  - In terminal, or cmd, run:
 *  - "java homework3.java n k"
 *  - n should change to the checking number, k is the times of loop
 *  - eg. "java homework3.jave 524287 1000"
 ***/
import java.util.Random;
import java.lang.Math;
public class homework3 {
    /**
     * powermod function:
     * @param a long integer
     * @param b long integer
     * @param r long integer
     * @return the result of (a^b)mod r
     */
    public static long powermod(long a, long b, long r){
        long prob = 1;
        while (b > 0){
            if (b % 2 != 0) prob = (prob * a) % r;
            a = (a * a) % r;
            b = b / 2;
        }
        return prob;
    }

    /**
     * Miller Rabin function to check whether the number n is prime or composite
     * @param n long integer
     * @param k long integer
     * @return if the number is checked prime,
     * then it shows "probably prime", otherwise shows "composite"
     */
    public static String MillerRabin(long n, int k){
        if(n <= 3) return "prime";
        Random random = new Random();
        long d = n-1;
        long r = 0;
        while(d % 2 == 0){
            d /= 2;
            r += 1;
        }
        for(int i = 1; i <= k; i++){
            long a = Math.abs(random.nextLong());
            a = a %(n-3) +2;
            long x = powermod(a, d, n);
            if((x == 1) || (x == n-1)) {
                continue;
            }
            int flag = 0;
            for(int j = 0; j<= r-1; j++) {
                x = powermod(x, 2, n);
                if (x == n - 1){
                    flag = 1;
                    break;
                }
                if (x == 1) return "composite";
            }
            if(flag == 0) return "composite";
        }
        return "probably prime";
    }
    public static void main(String[]args){
        int n = Integer.parseInt(args[0]);
        int k = Integer.parseInt(args[1]);
        System.out.println("The number " + n + " is " + MillerRabin(n,k));
    }
}
